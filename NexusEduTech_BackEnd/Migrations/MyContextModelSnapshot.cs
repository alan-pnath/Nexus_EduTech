// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NexusEduTech_BackEnd.Models;

#nullable disable

namespace NexusEduTech_BackEnd.Migrations
{
    [DbContext(typeof(MyContext))]
    partial class MyContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("NexusEduTech_BackEnd.Models.Classess", b =>
                {
                    b.Property<int>("ClassId")
                        .HasColumnType("int");

                    b.Property<string>("ClassName")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("ClassId");

                    b.ToTable("tbl_classess");
                });

            modelBuilder.Entity("NexusEduTech_BackEnd.Models.CustomUser", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserId");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar")
                        .HasColumnName("Address");

                    b.Property<DateTime>("DOB")
                        .HasColumnType("Date")
                        .HasColumnName("DOB");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar")
                        .HasColumnName("FName");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar")
                        .HasColumnName("Gender");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<string>("LName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar")
                        .HasColumnName("LName");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar")
                        .HasColumnName("Password");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar")
                        .HasColumnName("Role");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar")
                        .HasColumnName("UserName");

                    b.HasKey("UserId");

                    b.ToTable("tbl_CustomUser");
                });

            modelBuilder.Entity("NexusEduTech_BackEnd.Models.Examination", b =>
                {
                    b.Property<int>("ExamId")
                        .HasColumnType("int");

                    b.Property<int>("ClassId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ExamDate")
                        .HasColumnType("Date")
                        .HasColumnName("ExamDate");

                    b.Property<string>("ExamName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar")
                        .HasColumnName("ExamName");

                    b.Property<int>("Max_Mark")
                        .HasColumnType("int")
                        .HasColumnName("Max_Mark");

                    b.HasKey("ExamId");

                    b.HasIndex("ClassId");

                    b.ToTable("tbl_Exam");
                });

            modelBuilder.Entity("NexusEduTech_BackEnd.Models.Marks", b =>
                {
                    b.Property<Guid>("MarkId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ExamId")
                        .HasColumnType("int");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<int>("mark")
                        .HasColumnType("int")
                        .HasColumnName("Mark");

                    b.HasKey("MarkId");

                    b.HasIndex("StudentId");

                    b.ToTable("tbl_Marks");
                });

            modelBuilder.Entity("NexusEduTech_BackEnd.Models.Student", b =>
                {
                    b.Property<int>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StudentId"));

                    b.Property<int>("ClassId")
                        .HasColumnType("int");

                    b.Property<int>("ClassRoomId")
                        .HasColumnType("int");

                    b.Property<string>("RegistrationNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar")
                        .HasColumnName("Registration Number");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("StudentId");

                    b.HasIndex("ClassId");

                    b.HasIndex("UserId");

                    b.ToTable("tbl_Student");
                });

            modelBuilder.Entity("NexusEduTech_BackEnd.Models.Teacher", b =>
                {
                    b.Property<int>("TeacherId")
                        .HasColumnType("int");

                    b.Property<int>("ClassId")
                        .HasColumnType("int");

                    b.Property<string>("RegistrationNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar")
                        .HasColumnName("Registration Number");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("subject")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TeacherId");

                    b.HasIndex("ClassId");

                    b.HasIndex("UserId");

                    b.ToTable("tbl_Teacher");
                });

            modelBuilder.Entity("NexusEduTech_BackEnd.Models.UserAuthenticate", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("role")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("id");

                    b.ToTable("tbl_UserAuthenticate");
                });

            modelBuilder.Entity("NexusEduTech_BackEnd.Models.Examination", b =>
                {
                    b.HasOne("NexusEduTech_BackEnd.Models.Classess", "class_Id")
                        .WithMany()
                        .HasForeignKey("ClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("class_Id");
                });

            modelBuilder.Entity("NexusEduTech_BackEnd.Models.Marks", b =>
                {
                    b.HasOne("NexusEduTech_BackEnd.Models.Student", "studentId")
                        .WithMany()
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("studentId");
                });

            modelBuilder.Entity("NexusEduTech_BackEnd.Models.Student", b =>
                {
                    b.HasOne("NexusEduTech_BackEnd.Models.Classess", "class_Id")
                        .WithMany()
                        .HasForeignKey("ClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NexusEduTech_BackEnd.Models.CustomUser", "userId")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("class_Id");

                    b.Navigation("userId");
                });

            modelBuilder.Entity("NexusEduTech_BackEnd.Models.Teacher", b =>
                {
                    b.HasOne("NexusEduTech_BackEnd.Models.Classess", "class_Id")
                        .WithMany()
                        .HasForeignKey("ClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NexusEduTech_BackEnd.Models.CustomUser", "userId")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("class_Id");

                    b.Navigation("userId");
                });
#pragma warning restore 612, 618
        }
    }
}
